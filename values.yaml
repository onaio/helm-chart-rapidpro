# Default values for rapidpro.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# RapidPro shared environment variables
awsAccessKeyId: ""
awsSecretAccessKey: ""
awsStorageBucketName: ""
awsS3RegionName: ""
elasticSearchUrl: "http://elasticsearch:9200"
redisUrl: "redis://redis:6379/10"
postgresUrl: "postgres://postgres:password@postgresql:5432/rapidpro"
rapidproDomain: "rapidpro.local"
smtp:
  host: "smtp.example.org"
  port: 25
  username: ""
  password: ""
  defaultFromEmail: ""
  useTls: on

# Values for the RapidPro Django application
rapidpro:
  image:
    repository: praekeltfoundation/rapidpro
    pullPolicy: IfNotPresent
    tag: null
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  service:
    type: ClusterIP
    port: 80
    targetPort: 8000
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls: []
  resources: {}
    # RapidPro secret key
  secretKey: ""

    # RapidPro environment variables. See https://github.com/rapidpro/rapidpro/blob/master/temba/settings_common.py
  extraEnvVars: {}
  extraEnvSercrets: {}
  podAnnotations: {}

  podSecurityContext: {}
  runCollectstatic: "on"
  initDb: "on"
  runMigrations: "on"
  runCompress: "on"
  clearCompressorCache: "off"
  mediaVolume:
    name: "rapidpro-media-volume"
    storageClassName: ""
    size: 10Gi

# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

mailroom:
  authToken: ""
  listenAddress: "0.0.0.0"
  service:
    type: ClusterIP
    port: 8090
    targetPort: 8090
  image:
    repository: praekeltfoundation/mailroom
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: null
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  # Extra environment variables to pass to the mailroom container configmap (e.g. MAILROOM_SENTRY_DSN)
  extraEnvVars: {}
  extraEnvSercrets: {}
  resources: {}
  podAnnotations: {}
  podSecurityContext: {}
  # fsGroup: 2000
  imagePullSecrets: []
  securityContext: {}



courier:
  image:
    repository: praekeltfoundation/courier
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: null
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  service:
    type: ClusterIP
    port: 8080
  ingress:
    className: "nginx"
    hosts:
      - host: courier.local
        paths:
          - path: /
            pathType: ImplementationSpecific
  extraEnvVars: {}
  extraEnvSercrets: {}
  spoolDirectory: "/home/courier/spool"

indexer:
  image:
    repository: praekeltfoundation/rp-indexer
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: null
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  extraEnvVars: {}
  extraEnvSercrets: {}
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

archiver:
  image:
    pullPolicy: IfNotPresent
    repository: docker.io/praekeltfoundation/rp-archiver
    tag: v7.0.0
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  # Extra environment variables to pass to the archiver container configmap
  extraEnvVars:
    ARCHIVER_TEMP_DIR: /tmp
    ARCHIVER_DELETE: false
  resources: {}
  podAnnotations: {}
  podSecurityContext: {}
  imagePullSecrets: []
  securityContext: {}

#To use an external Redis instance, set to the URL of the external Redis instance and set redis.enabled to false
externalRedisUrl: ""
redis:
  enabled: true
  image:
    tag: 6.2.5
  service:
    type: ClusterIP
    port: 6379
  persistence:
    enabled: false
  auth:
    enabled: false

#To use an external PostgreSQL instance, set to the URL of the external PostgreSQL instance and set postgresql.enabled to false
externalPostgresqlUrl: ""
postgresql:
  enabled: true
  auth:
    username: rapidpro
    password: rapidpro
    database: rapidpro
    postgresPassword: "secret"

# enable Postgis extension for the default database using initdb scripts
  initdb:
    scripts:
      postgis.sh: |
        #!/bin/bash
        psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "CREATE EXTENSION postgis;"

  service:
    type: ClusterIP
    port: 5432
  persistence:
    enabled: true
    size: 40Gi

#To use an external Elasticsearch instance, set to the URL of the external Elasticsearch instance and set elasticsearch.enabled to false
externalElasticsearchUrl: ""
elasticsearch:
  enabled: true
  image:
    tag: 7.17.6
  service:
    type: ClusterIP
    port: 9200
  persistence:
    enabled: true
    size: 40Gi
